/*! code-racer 10-11-2015 */
angular.module("codeOff",["codeOff.services","codeOff.game","codeOff.select","ngRoute"]).config(["$routeProvider","$httpProvider",function(a,b){a.when("/play",{templateUrl:"app/game/game.html",controller:"gameCtrl"}).when("/select",{templateUrl:"app/select/select.html",controller:"selectCtrl"}).otherwise({redirectTo:"/select"})}]),angular.module("codeOff.game",[]).controller("gameCtrl",["$scope","$document",function(a,b){function c(b){a.stats.cpm=a.typed.length/(b-d)*6e4,document.getElementById("cpm").innerText=a.stats.cpm,document.getElementById("timer").innerText=a.gameOver?"finished!":((g-b)/1e3).toFixed(3)+"s",b>=g||a.typed.length===h.length?(a.gameOver=!0,window.cancelAnimationFrame(e)):window.requestAnimationFrame(c)}var d,e,f=["for(var i = 0; i < 10; i++) {\n  console.log(i);\n}","// If typed letter is correct, add the letter to the \"typed\" array\nif(entered === $scope.current) {\n  console.log('gotem');\n  $scope.typed.push($scope.current);\n  $scope.current = $scope.untyped.shift();\n}\n// If typed letter is incorrect\nelse {\n  console.log('nope');\n  // Increment # of mistakes for accuracy calculation\n  mistakes++;\n  // Shake the cursor\n  if($scope.cursor.classList){\n    $scope.cursor.classList.remove('blink');\n    $scope.cursor.classList.add('shake');\n    window.setTimeout(function() {\n      $scope.cursor.classList.remove('shake');\n      $scope.cursor.classList.add('blink');\n    }, 150);\n  }\n}","function calc(time) {\n  $scope.stats.cpm = $scope.typed.length / (time - startTime) * 60000;\n  document.getElementById('cpm').innerText = $scope.stats.cpm;\n  if(!!!$scope.untyped.length) {\n    window.cancelAnimationFrame(timer);\n    console.log('Done! Final characters per min:', $scope.stats.cpm);\n  }\n  else {\n    window.requestAnimationFrame(calc);\n  }\n}",".factory('Links', function ($http) {\n  var getAll = function () {\n    return $http({\n      method: 'GET',\n      url: '/api/links'\n    })\n    .then(function (resp) {\n      return resp.data;\n    });\n  };\n\n  var addLink = function (link) {\n    return $http({\n      method: 'POST',\n      url: '/api/links',\n      data: link\n    });\n  };\n\n  return {\n    getAll: getAll,\n    addLink: addLink\n  };\n})"],g=6e4,h=f[0],i=0,j=document.getElementById("cursor");a.gameOver=!1,a.stats={incorrect:{},cpm:0,acc:100},a.typed=[],a.untyped=h.split(""),a.current,b.on("keydown",function(a){a.keyCode&&(8===a.keyCode?a.preventDefault():93===a.keyCode||91===a.keyCode?a.preventDefault():9===a.keyCode&&a.preventDefault())}),a.init=function(){a.current=a.untyped.shift()},a.keyCheck=function(b){if(!a.gameOver){console.log("textlength:",h.length,"typedlength:",a.typed.length),a.typed.length||(d=performance.now(),e=window.requestAnimationFrame(c));var f=13===b.charCode?"\n":String.fromCharCode(b.charCode);if(f===a.current)console.log("gotem"),a.typed.push(a.current),a.current=a.untyped.shift();else{console.log("nope"),i++,j.classList?(j.classList.remove("blink"),j.classList.add("shake"),window.setTimeout(function(){j.classList.remove("shake"),j.classList.add("blink")},150)):j.className+=" shake";var g;switch(a.current){case" ":g="[space]";break;case"\n":g="[return]";break;default:g=a.current}a.stats.incorrect.hasOwnProperty(g)?a.stats.incorrect[g]++:a.stats.incorrect[g]=1}a.stats.acc=(a.typed.length-i)/a.typed.length*100}}}]),ColorPicker(document.getElementById("slide"),document.getElementById("picker"),function(a,b,c){document.body.style.backgroundColor=a}),angular.module("codeOff.select",[]).controller("selectCtrl",["$scope","$document",function(a,b){console.log("hello"),new ColorPicker(document.getElementById("slide"),document.getElementById("picker"),function(a,b,c){document.body.style.backgroundColor=a})}]),angular.module("codeOff.services",[]).factory("Player",["$http",function(a){var b=function(b){return a({method:"POST",url:"/game/join",data:b})};return{ready:b}}]);